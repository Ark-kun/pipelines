# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "shows how to use dsl.Condition.", "name": "pipeline flip coin"}'
  generateName: pipeline-flip-coin-
spec:
  arguments:
    parameters: []
  entrypoint: pipeline-flip-coin
  serviceAccountName: pipeline-runner
  templates:
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: output
            value: '{{tasks.flip-again.outputs.parameters.output}}'
        dependencies:
        - flip-again
        name: condition-2
        template: condition-2
        when: '"{{tasks.flip-again.outputs.parameters.output}}" == "tails"'
      - name: flip-again
        template: flip-again
    name: condition-1
    outputs:
      parameters:
      - name: output
        valueFrom:
          parameter: '{{tasks.flip-again.outputs.parameters.output}}'
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: output
            value: '{{inputs.parameters.output}}'
        name: print1
        template: print1
    inputs:
      parameters:
      - name: output
    name: condition-2
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: output
            value: '{{inputs.parameters.output}}'
        name: print2
        template: print2
    inputs:
      parameters:
      - name: output
    name: condition-3
  - container:
      args:
      - python -c "import random; result = 'heads' if random.randint(0,1) == 0 else
        'tails'; print(result)" | tee /tmp/output
      command:
      - sh
      - -c
      image: python:alpine3.6
    name: flip
    outputs:
      artifacts:
      - name: output
        path: /tmp/output
      parameters:
      - name: output
        valueFrom:
          path: /tmp/output
  - container:
      args:
      - python -c "import random; result = 'heads' if random.randint(0,1) == 0 else
        'tails'; print(result)" | tee /tmp/output
      command:
      - sh
      - -c
      image: python:alpine3.6
    name: flip-again
    outputs:
      artifacts:
      - name: output
        path: /tmp/output
      parameters:
      - name: output
        valueFrom:
          path: /tmp/output
  - dag:
      tasks:
      - dependencies:
        - flip
        name: condition-1
        template: condition-1
        when: '"{{tasks.flip.outputs.parameters.output}}" == "heads"'
      - arguments:
          parameters:
          - name: output
            value: '{{tasks.condition-1.outputs.parameters.output}}'
        dependencies:
        - condition-1
        - flip
        name: condition-3
        template: condition-3
        when: '"{{tasks.flip.outputs.parameters.output}}" == "tails"'
      - name: flip
        template: flip
    name: pipeline-flip-coin
  - container:
      command:
      - echo
      - '{{inputs.parameters.output}}'
      image: alpine:3.6
    inputs:
      parameters:
      - name: output
    name: print1
  - container:
      command:
      - echo
      - '{{inputs.parameters.output}}'
      image: alpine:3.6
    inputs:
      parameters:
      - name: output
    name: print2
