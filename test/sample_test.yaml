# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: sample-test-
spec:
  entrypoint: sample-test
  volumes:
    - name: gcp-credentials
      secret:
        secretName: user-gcp-sa
  arguments:
    parameters:
      - name: image-build-context-gcs-uri
      - name: image-builder-image
        value: gcr.io/ml-pipeline-test/image-builder:v20181128-0.1.3-rc.1-109-ga5a14dc-e3b0c4
      - name: target-image-prefix
      - name: test-results-gcs-dir
      - name: sample-tests-image-suffix
        value: sample-tests
      - name: namespace
        value: kubeflow
  templates:
    - name: sample-test
      inputs:
        parameters:
          - name: target-image-prefix
          - name: test-results-gcs-dir
          - name: sample-tests-image-suffix
          - name: namespace
      steps:
        - - name: build-sample-tests-image
            template: build-image-by-dockerfile
            arguments:
              parameters:
                - name: docker-path
                  value: .
                - name: docker-file
                  value: test/sample-test/Dockerfile
                - name: image-name
                  value: "{{inputs.parameters.target-image-prefix}}{{inputs.parameters.sample-tests-image-suffix}}"
        - - name: run-sample-tests-loop
            template: run-sample-tests
            arguments:
              parameters:
                - name: namespace
                  value: "{{inputs.parameters.namespace}}"
                - name: sample-tests-image
                  value: "{{inputs.parameters.target-image-prefix}}{{inputs.parameters.sample-tests-image-suffix}}"
                - name: target-image-prefix
                  value: "{{inputs.parameters.target-image-prefix}}"
                - name: test-results-gcs-dir
                  value: "{{inputs.parameters.test-results-gcs-dir}}"
                - name: test-path
                  value: "{{item}}"
            withItems:
              - test/sample-test/configs/xgboost_training_cm.config.yaml
              - samples/core/lightweight_component/lightweight_component.ipynb
              - test/sample-test/configs/dsl_static_type_checking.config.yaml
              - samples/core/pipeline_transformers/pipeline_transformers.py
              - samples/core/secret/secret.py
              - test/sample-test/configs/sidecar.config.yaml
              - test/sample-test/configs/dataflow.config.yaml
              - samples/core/execution_order/execution_order.py
              - test/sample-test/configs/imagepullsecrets.config.yaml
              - test/sample-test/configs/retry.config.yaml
              - samples/core/artifact_location/artifact_location.py
              - test/sample-test/configs/preemptible_tpu_gpu.config.yaml
              - test/sample-test/configs/volume_snapshot_ops.config.yaml
              - test/sample-test/configs/kubeflow_tf_serving.config.yaml
              - samples/core/component_build/component_build.ipynb
              - samples/core/loop_output/loop_output.py
              - samples/core/loop_parameter/loop_parameter.py
              - samples/core/loop_static/loop_static.py
              - samples/core/resource_ops/resource_ops.py
              - test/sample-test/configs/multiple_outputs.config.yaml
              - samples/core/ai_platform/ai_platform.ipynb
              - test/sample-test/configs/parameterized_tfx_oss.config.yaml
    # Build and push image
    - name: build-image-by-dockerfile
      inputs:
        parameters:
          # GCS URI prefix pointing to a .tar.gz archive of Docker build context
          - name: image-build-context-gcs-uri
            value: "{{workflow.parameters.image-build-context-gcs-uri}}"
          # The relative code path to the Dockerfile
          - name: docker-path
          # Name of the Docker file to use. "Dockerfile" by default
          - name: docker-file
            value: Dockerfile
          - name: image-name
      outputs:
        parameters:
          - name: strict-image-name
            valueFrom:
              path: /outputs/strict-image-name/file
      container:
        image: "{{workflow.parameters.image-builder-image}}"
        imagePullPolicy: 'Always'
        args: [
          "--image-build-context-gcs-uri", "{{inputs.parameters.image-build-context-gcs-uri}}",
          "--docker_path", "{{inputs.parameters.docker-path}}",
          "--docker_file", "{{inputs.parameters.docker-file}}",
          "--image_name", "{{inputs.parameters.image-name}}",
        ]
        env:
          - name: DOCKER_HOST
            value: 127.0.0.1
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/user-gcp-sa.json
        volumeMounts:
          - name: gcp-credentials
            mountPath: /secret/gcp-credentials
      sidecars:
        - name: dind
          image: docker:17.10-dind
          securityContext:
            privileged: true
          mirrorVolumeMounts: true

    - name: run-sample-tests
      inputs:
        parameters:
          - name: test-results-gcs-dir
          - name: target-image-prefix
          - name: sample-tests-image
          - name: namespace
          - name: test-path
      container:
        image: "{{inputs.parameters.sample-tests-image}}"
        #command:
        #  - python3
        #  - /python/src/github.com/kubeflow/pipelines/test/sample-test/sample_test_launcher.py
        args: [
          "sample_test", "run_test",
          "--namespace", "{{inputs.parameters.namespace}}",
          "--results-gcs-dir", "{{inputs.parameters.test-results-gcs-dir}}",
          "--target-image-prefix", "{{inputs.parameters.target-image-prefix}}",
          "--test-path", "{{inputs.parameters.test-path}}",
        ]
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/user-gcp-sa.json
        volumeMounts:
          - name: gcp-credentials
            mountPath: /secret/gcp-credentials

